/*! For license information please see 97ef7c7f.fd075acf.js.LICENSE.txt */
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2160],{7915:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var s=i(5893),r=i(1151);const o={title:"NGINX and App Daemon",format:"mdx"},t=void 0,a={unversionedId:"features/nginx",id:"features/nginx",title:"NGINX and App Daemon",description:"Our server serves HTTP and HTTPS traffic using NGINX. NGINX is used to serve static files and proxy requests to the app daemon. Because it operates for all users on the server, only a limited set of features are configurable. It's only configurable using the runner.",source:"@site/docs/features/nginx.md",sourceDirName:"features",slug:"/features/nginx",permalink:"/docs/features/nginx",draft:!1,unlisted:!1,editUrl:"https://github.com/domcloud/domcloud-co/tree/master/docs/features/nginx.md",tags:[],version:"current",frontMatter:{title:"NGINX and App Daemon",format:"mdx"},sidebar:"tutorialSidebar",previous:{title:"Firewall Daemon",permalink:"/docs/features/firewall"},next:{title:"The System Runner",permalink:"/docs/features/runner"}},c={},l=[{value:"Check current configuration",id:"check-current-configuration",level:2},{value:"Configure NGINX for HTTPS",id:"configure-nginx-for-https",level:2},{value:"Configure NGINX for PHP",id:"configure-nginx-for-php",level:2},{value:"Configure NGINX for General Apps",id:"configure-nginx-for-general-apps",level:2},{value:"PORT environment variable",id:"port-environment-variable",level:3},{value:"Set Environment Variables",id:"set-environment-variables",level:3},{value:"<code>app_env</code> option",id:"app_env-option",level:3},{value:"<code>env_var_list</code> option",id:"env_var_list-option",level:3},{value:"<code>~/.bashrc</code> file",id:"bashrc-file",level:3},{value:"Restarting App",id:"restarting-app",level:3},{value:"Websocket",id:"websocket",level:3},{value:"Language-Specific Configuration",id:"language-specific-configuration",level:2},{value:"Global Configuration",id:"global-configuration",level:2}];function d(e){const n=Object.assign({p:"p",a:"a",ul:"ul",li:"li",h2:"h2",pre:"pre",code:"code",h3:"h3"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"import ThemedImage from '@theme/ThemedImage';"}),"\n",(0,s.jsxs)(n.p,{children:["Our server serves HTTP and HTTPS traffic using NGINX. NGINX is used to serve static files and proxy requests to the app daemon. Because it operates for all users on the server, only a limited set of features are configurable. It's only configurable using the ",(0,s.jsx)(n.a,{href:"/docs/features/runner#nginx",children:"runner"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"If you don't familiar with NGINX, you can read some of good resorces here:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://nginx.org/en/docs/",children:"Official documentation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.freecodecamp.org/news/the-nginx-handbook/",children:"The NGINX Handbook"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"check-current-configuration",children:"Check current configuration"}),"\n",(0,s.jsx)(n.p,{children:"You can check the current configuration by going to Check -> NGINX."}),"\n",(0,s.jsx)(n.p,{children:'<ThemedImage\nsources={{\ndark: "/assets/ss/check-nginx-b.png",\nlight: "/assets/ss/check-nginx-w.png"\n}}\nalt=""\nclassName="img-fluid border rounded-3 shadow--md mb-4"\nwidth="700"\nheight="500"\nloading="lazy"\n/>'}),"\n",(0,s.jsxs)(n.p,{children:["The left side is the configurable options, and the right side is the current configuration applied in NGINX. The configurable option is written in YAML format, which when saved, applied as a new configuration configured via ",(0,s.jsx)(n.a,{href:"/docs/features/runner#nginx",children:"the runner"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Below is the example of the configuration:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"nginx:\n  fastcgi: 'on'\n  root: public_html\n  index: index.html index.php\n  ssl: 'on'\n"})}),"\n",(0,s.jsx)(n.h2,{id:"configure-nginx-for-https",children:"Configure NGINX for HTTPS"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"/docs/features/runner#ssl-1",children:(0,s.jsx)(n.code,{children:"ssl"})})," option has three options: ",(0,s.jsx)(n.code,{children:"always"}),", ",(0,s.jsx)(n.code,{children:"on"}),", ",(0,s.jsx)(n.code,{children:"off"}),". The ",(0,s.jsx)(n.code,{children:"always"})," option will force the server to redirect all HTTP traffic to HTTPS. The default value for ",(0,s.jsx)(n.code,{children:"ssl"})," is ",(0,s.jsx)(n.code,{children:"on"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"configure-nginx-for-php",children:"Configure NGINX for PHP"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"/docs/features/runner#fastcgi",children:(0,s.jsx)(n.code,{children:"fastcgi"})})," option has three options: ",(0,s.jsx)(n.code,{children:"always"}),", ",(0,s.jsx)(n.code,{children:"on"}),", ",(0,s.jsx)(n.code,{children:"off"}),". The default value for ",(0,s.jsx)(n.code,{children:"fastcgi"})," is ",(0,s.jsx)(n.code,{children:"off"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["This section is covered more in the ",(0,s.jsx)(n.a,{href:"/docs/deployment/php#nginx-setup",children:"PHP Deployment"})," section."]}),"\n",(0,s.jsx)(n.h2,{id:"configure-nginx-for-general-apps",children:"Configure NGINX for General Apps"}),"\n",(0,s.jsxs)(n.p,{children:["NGINX by default only forwards connection and can't invoke the desired app to run. We use ",(0,s.jsx)(n.a,{href:"https://www.phusionpassenger.com/",children:"Phusion Passenger"})," so we can configure NGINX to invoke the app and forwards HTTP requests."]}),"\n",(0,s.jsx)(n.p,{children:"The minimum configuration to enable NGINX for general apps is:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"nginx:\n  root: public_html/public\n  passenger:\n    enabled: on\n    app_start_command: env PORT=$PORT npm start\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Which is equivalent to running ",(0,s.jsx)(n.code,{children:"npm start"})," in the ",(0,s.jsx)(n.code,{children:"public_html"})," (parent of root) directory, with the ",(0,s.jsx)(n.code,{children:"PORT"})," environment variable set to the port that NGINX is listening to."]}),"\n",(0,s.jsxs)(n.p,{children:["Passenger's ",(0,s.jsx)(n.code,{children:"enabled: on"})," config is required to indicate that Passenger's module is activated for given host."]}),"\n",(0,s.jsxs)(n.p,{children:["It is important that  ",(0,s.jsx)(n.code,{children:"root"})," is set to the directory that contains the ",(0,s.jsx)(n.code,{children:"public"})," directory. This is because NGINX will serve the ",(0,s.jsx)(n.code,{children:"public"})," directory as the root directory for serving static files, and you don't want to expose the entire app directory to the public."]}),"\n",(0,s.jsxs)(n.p,{children:["If the app must be called from a subdirectory, you can use the ",(0,s.jsx)(n.code,{children:"app_root"})," option to specify the directory that contains the app. For example, if the main app file is in ",(0,s.jsx)(n.code,{children:"public_html/server/app.js"}),", you can set the ",(0,s.jsx)(n.code,{children:"app_root"})," to ",(0,s.jsx)(n.code,{children:"public_html/server"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"nginx:\n  root: public_html/public\n  passenger:\n    enabled: on\n    app_root: public_html/server\n    app_start_command: env PORT=$PORT node app.js\n"})}),"\n",(0,s.jsx)(n.h3,{id:"port-environment-variable",children:"PORT environment variable"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"$PORT"})," environment variable is set by NGINX. It is a random port that's chosen to be proxied from NGINX. The app must listen to this port to receive HTTP requests."]}),"\n",(0,s.jsxs)(n.p,{children:["You can tell the app to listen to this port by setting the an environment variable via ",(0,s.jsx)(n.code,{children:"env"})," like this:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"app_start_command: env PORT=$PORT node app.js\n"})}),"\n",(0,s.jsx)(n.p,{children:"Or you can set the port using the app's argument if available:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"app_start_command: node app.js --port $PORT\n"})}),"\n",(0,s.jsx)(n.h3,{id:"set-environment-variables",children:"Set Environment Variables"}),"\n",(0,s.jsx)(n.p,{children:"Passenger has three ways to set environment variables:"}),"\n",(0,s.jsxs)(n.h3,{id:"app_env-option",children:[(0,s.jsx)(n.code,{children:"app_env"})," option"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"./runner#passenger",children:(0,s.jsx)(n.code,{children:"app_env"})})," option is special option that's used to set environment mode. The default value is ",(0,s.jsx)(n.code,{children:"production"}),". This option sets the value to the following environment variables:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"RAILS_ENV"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"RACK_ENV"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"WSGI_ENV"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"NODE_ENV"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"PASSENGER_APP_ENV"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["You can set this value other values such as ",(0,s.jsx)(n.code,{children:"development"})," or ",(0,s.jsx)(n.code,{children:"test"}),"."]}),"\n",(0,s.jsxs)(n.h3,{id:"env_var_list-option",children:[(0,s.jsx)(n.code,{children:"env_var_list"})," option"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"./runner#passenger",children:(0,s.jsx)(n.code,{children:"env_var_list"})})," option is used to set environment variables directly from NGINX. It's a list of environment variables to set. The value is a string that's in the format of ",(0,s.jsx)(n.code,{children:"KEY=VALUE"}),". For example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'nginx:\n  passenger:\n    enabled: on\n    app_start_command: env PORT=$PORT node app.js\n    env_var_list:\n      - APP_SECRET=SECRET_VALUE\n      - APP_CONFIG={"key":"value"}\n'})}),"\n",(0,s.jsxs)(n.h3,{id:"bashrc-file",children:[(0,s.jsx)(n.code,{children:"~/.bashrc"})," file"]}),"\n",(0,s.jsxs)(n.p,{children:["Passenger reads the ",(0,s.jsx)(n.code,{children:"~/.bashrc"})," file to set environment variables. You can set environment variables in this way. For example run this command to edit the ",(0,s.jsx)(n.code,{children:"~/.bashrc"})," file via SSH:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"nano ~/.bashrc\n"})}),"\n",(0,s.jsx)(n.p,{children:"Then add the following line to the file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"export APP_SECRET=SECRET_VALUE\n"})}),"\n",(0,s.jsx)(n.p,{children:"The environment variable will be set when the app is started next time."}),"\n",(0,s.jsxs)(n.p,{children:["More information about setting environment variables can be found in the ",(0,s.jsx)(n.a,{href:"https://www.phusionpassenger.com/docs/advanced_guides/in_depth/node/environment_variables.html",children:"Passenger documentation"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"restarting-app",children:"Restarting App"}),"\n",(0,s.jsxs)(n.p,{children:["Any edits either in the app file or ",(0,s.jsx)(n.code,{children:"~/.bashrc"})," file will not be applied until the app is restarted. You can restart the app forcibly by running this in SSH:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"passenger-config restart-app /\n"})}),"\n",(0,s.jsxs)(n.p,{children:["More information about restarting app can be found in the ",(0,s.jsx)(n.a,{href:"https://www.phusionpassenger.com/docs/tutorials/reloading_code/node/",children:"Passenger documentation"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"websocket",children:"Websocket"}),"\n",(0,s.jsx)(n.p,{children:"If the app uses Websocket, you have to enable sticky sessions in NGINX. This is because there will be multiple process spawned and Phusion Passenger will load balance the requests to the processes. If the requests are not sticky, the Websocket connection will be lost."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"sticky_sessions: on\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You can read more about websocket usage at the ",(0,s.jsx)(n.a,{href:"https://www.phusionpassenger.com/docs/references/config_reference/nginx/#passenger_sticky_sessions",children:"Passenger documentation"})]}),"\n",(0,s.jsx)(n.h2,{id:"language-specific-configuration",children:"Language-Specific Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["More information about configuring NGINX for specific languages can be found in the ",(0,s.jsx)(n.a,{href:"../deployment",children:"Deployment"})," section."]}),"\n",(0,s.jsx)(n.h2,{id:"global-configuration",children:"Global Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["Global configuration of NGINX cannot be changed. However, some of the configuration are set as optimally as possible. You can see more about the global configuration in ",(0,s.jsx)(n.a,{href:"https://github.com/domcloud/container/blob/master/templates/nginx.conf",children:"this file"}),". Some of the interesting configuration are:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Static files are cached with ",(0,s.jsx)(n.code,{children:"max"})," expiration time."]}),"\n",(0,s.jsxs)(n.li,{children:["Gzip are enabled for ",(0,s.jsx)(n.code,{children:"css"}),", ",(0,s.jsx)(n.code,{children:"js"}),", ",(0,s.jsx)(n.code,{children:"svg"})," static files."]}),"\n",(0,s.jsx)(n.li,{children:"Maximum file upload size is set to 512MB."}),"\n",(0,s.jsxs)(n.li,{children:["There's ",(0,s.jsx)(n.a,{href:"https://www.nginx.com/blog/rate-limiting-nginx/",children:"rate limit"})," of 4 requests per second with 100 burst request per IP address to mitigate DoS attack."]}),"\n"]})]})}const h=function(e={}){const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(d,e)})):d(e)}},5251:(e,n,i)=>{i(7418);var s=i(7294),r=60103;if(n.Fragment=60107,"function"==typeof Symbol&&Symbol.for){var o=Symbol.for;r=o("react.element"),n.Fragment=o("react.fragment")}var t=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a=Object.prototype.hasOwnProperty,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,n,i){var s,o={},l=null,d=null;for(s in void 0!==i&&(l=""+i),void 0!==n.key&&(l=""+n.key),void 0!==n.ref&&(d=n.ref),n)a.call(n,s)&&!c.hasOwnProperty(s)&&(o[s]=n[s]);if(e&&e.defaultProps)for(s in n=e.defaultProps)void 0===o[s]&&(o[s]=n[s]);return{$$typeof:r,type:e,key:l,ref:d,props:o,_owner:t.current}}n.jsx=l,n.jsxs=l},5893:(e,n,i)=>{e.exports=i(5251)},1151:(e,n,i)=>{i.d(n,{Zo:()=>a,ah:()=>o});var s=i(7294);const r=s.createContext({});function o(e){const n=s.useContext(r);return s.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const t={};function a({components:e,children:n,disableParentContext:i}){let a;return a=i?"function"==typeof e?e({}):e||t:o(e),s.createElement(r.Provider,{value:a},n)}}}]);