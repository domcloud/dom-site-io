"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7520],{3905:(e,t,o)=>{o.d(t,{Zo:()=>u,kt:()=>p});var a=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,a)}return o}function n(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,a,r=function(e,t){if(null==e)return{};var o,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)o=i[a],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)o=i[a],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):n(n({},t),e)),o},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var o=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(o),p=r,m=d["".concat(l,".").concat(p)]||d[p]||h[p]||i;return o?a.createElement(m,n(n({ref:t},u),{},{components:o})):a.createElement(m,n({ref:t},u))}));function p(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=o.length,n=new Array(i);n[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,n[1]=s;for(var c=2;c<i;c++)n[c]=o[c];return a.createElement.apply(null,n)}return a.createElement.apply(null,o)}d.displayName="MDXCreateElement"},6663:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>n,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=o(7462),r=(o(7294),o(3905));const i={title:"Our Philosophy",sidebar_position:3},n="Our Philosophy",s={unversionedId:"intro/philosophy",id:"intro/philosophy",title:"Our Philosophy",description:"We want students, teachers, developers with their hobby time make use of our platform for a better experience with putting things online. Personally, the reason I created this because I once struggled to find a host service that's good enough for a university project.",source:"@site/docs/intro/philosophy.md",sourceDirName:"intro",slug:"/intro/philosophy",permalink:"/docs/intro/philosophy",draft:!1,editUrl:"https://github.com/domcloud/domcloud-co/tree/master/docs/intro/philosophy.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Our Philosophy",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/intro/getting-started"},next:{title:"Deployments",permalink:"/docs/deployment/"}},l={},c=[{value:"Drawbacks",id:"drawbacks",level:2},{value:"1. Not Scalable",id:"1-not-scalable",level:3},{value:"2. Fair Usage Limit",id:"2-fair-usage-limit",level:3},{value:"3. No Guarantee",id:"3-no-guarantee",level:3},{value:"Benefit",id:"benefit",level:2},{value:"1. Local File Access",id:"1-local-file-access",level:3},{value:"2. Incremental Build",id:"2-incremental-build",level:3},{value:"3. Simple Hot Fixes",id:"3-simple-hot-fixes",level:3},{value:"4. As close as running locally",id:"4-as-close-as-running-locally",level:3},{value:"Support",id:"support",level:2}],u={toc:c};function h(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"our-philosophy"},"Our Philosophy"),(0,r.kt)("p",null,"We want students, teachers, developers with their hobby time make use of our platform for a better experience with putting things online. Personally, the reason I created this because I once struggled to find a host service that's good enough for a university project."),(0,r.kt)("p",null,"With that said, there are couple drawbacks and benefit to our platform:"),(0,r.kt)("h2",{id:"drawbacks"},"Drawbacks"),(0,r.kt)("h3",{id:"1-not-scalable"},"1. Not Scalable"),(0,r.kt)("p",null,"Roughly saying, a system can be defined as ",(0,r.kt)("em",{parentName:"p"},"scalable")," if it can handle a large number of users, say, hundred thousands of visitor every day; or it's targeted for worldwide audience and visitor wouldn't worry about latency wherever they are."),(0,r.kt)("p",null,"Honestly, our platform don't solves both problem, because it's monolithic (single point of server) by design. "),(0,r.kt)("p",null,"We have to admit there are other better cloud providers that gives scalability for free, especially with static websites. But for other websites that need a backend code, it's way too complex. "),(0,r.kt)("p",null,"So far we (the world) have three solutions for scalability (what I know, so far) (Be warned, it's very technical): "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Serverless Functions"),". They're small function represents small pieces of code that can be deployed globally using e.g. AWS Lambda. The problem with that, not every framework can be chunked into small functions (e.g. WordPress and Laravel). Some people with brilliant idea might can turn some existing framework to fit into serverless functions, but I think it's complexity outweights the benefits if you don't look for scalability.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Container and Kubernetes"),". Kubernetes leverages containers which is about running a server code in an isolated environments. Kubernetes are software managers that clones and kills containers whenever they are needed. With that said, Kubernetes is a bit more complex than serverless functions. Also, you would have to mind the other things to ensure scalability like using Redis instead simple files for cache (e.g. for handling cookie/sessions). You would still have a lot of refactoring to do if the language isn't scalable by default (WordPress still can't do that), but still it's a lot easier than serverless functions.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Use of No-SQL databases"),". There are recent trends about GraphQL and NoSQL databases, and they're so scalable you can get rid of writing a backend code (provided with correct permissions to ensure security). A popular example for this is when developers create an Android App, mostly they use Firebase for the backend. Firebase already handles most backend aspect ranging from authentication, storage, analytics, to realtime database; This is also true for other services. The downside is that you have to consider this option since beginning, or risk rewriting everything from scratch. You also creates a direct depedency on a service for a major part of your application, and risk major refactor if you want to change from that later."))),(0,r.kt)("p",null,"Those 3 points are actually no problem if you (or your company) has a lot resources to outweight the cost of scalability. So, whether you're flying solo or with a (small) team, and not trying to compete on Facebook, Spotify, FedEx or any other global companies, then you ",(0,r.kt)("strong",{parentName:"p"},"might not need scalability"),", which this platform is designed for."),(0,r.kt)("h3",{id:"2-fair-usage-limit"},"2. Fair Usage Limit"),(0,r.kt)("p",null,"We given users a raw access (SSH) to the server, so they can do whatever they want with it. Practically, one can run a Jupyter Notebook on the server (we even provide a recipe for this). A website relates to Machine Learning (ML) research ",(0,r.kt)("em",{parentName:"p"},"may")," still be allowed to be hosted here, but under condition: It shouldn't take a lot of RAM/CPU usage. "),(0,r.kt)("p",null,"We don't measure RAM/CPU usage because it's nature, but we still draw a line for fair usage. We have an alert system if the CPU usage is too high continously. If it does happen, we have to kill the process forcibly so it doesn't impact other websites for too long. We could terminate an account if it comes again repeatedly."),(0,r.kt)("p",null,"The same thing goes for crypto, phising, DoS, and other malicious activities, which clearly against the service of terms we have here."),(0,r.kt)("p",null,"If your website has too much traffic, memory or CPU usage, but your website is legitimate, we may contact you so we can take an alternate agreement such that your website resource usage doesn't impact other websites."),(0,r.kt)("h3",{id:"3-no-guarantee"},"3. No Guarantee"),(0,r.kt)("p",null,"By design of monolithic system, or a single server point for a website, we don't provide any guarantee that your website will stay up most of time. We do have a ",(0,r.kt)("a",{parentName:"p",href:"https://stats.uptimerobot.com/AA77Xt9Jx8"},"uptime status monitoring system"),", but when a downtime occurred, it's inevitable. If your website runs for a mission critical project, you might need to take a look for alternate cloud provider that guarantees uptime and scalability."),(0,r.kt)("h2",{id:"benefit"},"Benefit"),(0,r.kt)("p",null,"If you don't mind about scalability, a classic monolithic system like our platform is a good choice for you. Here's why:"),(0,r.kt)("h3",{id:"1-local-file-access"},"1. Local File Access"),(0,r.kt)("p",null,"Local file access is often underrated in today's cloud computing world. The reason you wouldn't see people running PHP inside containers often is because this language is heavily depends with local file operations (e.g. for sessions and file uploads). Also, it's the simplest way to cache and store data. If you're not choosing to be monolithic then you would have take alternative solutions like Redis or Memcached for cache and S3 storages for file uploads."),(0,r.kt)("h3",{id:"2-incremental-build"},"2. Incremental Build"),(0,r.kt)("p",null,"If you have particularly large packages depedency, this will help you a lot. Unlike standard CI/CD, when you do e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"npm install"),", the existing ",(0,r.kt)("inlineCode",{parentName:"p"},"node_modules")," will not be cleared, thus speeding up the overall build time."),(0,r.kt)("h3",{id:"3-simple-hot-fixes"},"3. Simple Hot Fixes"),(0,r.kt)("p",null,"If you spot a bug in production, you have the option to fix it directly by editing the live server. This may risky and inconvenient for large sites. But for those who with little technical human resources, it greatly simplifies the process of bug fixing. When things cooling down, one can see the diff and then reapply a proper fix to stream (git) repository."),(0,r.kt)("h3",{id:"4-as-close-as-running-locally"},"4. As close as running locally"),(0,r.kt)("p",null,"We provide a local development environment that's as close as running locally. If you or your developer has a familiarity with Linux, practically it should be easy to manage the server. "),(0,r.kt)("h2",{id:"support"},"Support"),(0,r.kt)("p",null,"Currently, DOM Cloud run as a service for community. Core developer resources is minimal but we strive to make this platform autonomous and easy to use. You welcome to ask in the discussion forum or emails."))}h.isMDXComponent=!0}}]);